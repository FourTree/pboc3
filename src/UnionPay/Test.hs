{-# LANGUAGE OverloadedStrings, ScopedTypeVariables, PatternSynonyms #-}
{-# LANGUAGE RecordWildCards #-}
module UnionPay.Test where

import Data.Int
import Data.Word
import Data.String
import Data.Monoid
import Data.Hex
import Data.IORef
import qualified Data.ByteString.Lazy as B
import System.IO.Unsafe
import UnionPay.Types
import UnionPay.Transfer
import UnionPay.PBOC3

----------------test code------------------
consoleTrasfer = Transfer $ \bs -> do
    print $ hex bs
    rsp <- getLine
    rbs <- unhex  $ fromString rsp
    print $ hex rbs
    return rbs

{-# NOINLINE testTransfer #-}
testTransfer = unsafePerformIO $ do
    ref <- newIORef bss
    return $ Transfer $ \bs -> do
        print $ "cmd : " <> hex bs
        bs : vs <- readIORef ref
        writeIORef ref vs
        print $ "response :" <> bs
        unhex bs
    where
        bss :: [BS]
        bss = [
            "6F15840E315041592E5359532E4444463031A5038801019000"
          , "701961174F08A000000333010102500B42435443204352454449549000"
          , "6A83"
          , "6F588408A000000333010102A54C500B42435443204352454449549F38189F66049F02069F03069F1A0295055F2A029A039C019F37045F2D02636E9F1101019F120B4243544320435245444954BF0C0A9F4D020B0ADF4D020C0A9000"
          , "800E7C000801010010010400180101019000"
          , "7040570F6214441000010103D301022000000F9F1F28363231343434313030303031303130335E5E333031303232305E32303134303530363133303432375F3401019000"
          , "7081FB9081F8A48462B2EECCA9C532425C06BEED6A45AF2F05F2BB5E2B6FBA420276B4F1546DC2D36CA95EE19A4209F8CD4393FDD202E1A1B6CA6271497B7C641B91DE111EC8FDAA5A7685B6DD2D458FE56BBA45D0E97281192019D96EEB9577317FF4D59295D3ABB2550231B0F1CF0C82089F21BD49DFF734F5043E7B90780D35FB3F500B74DE9428621436839E5CCDE7E43B6120175F665FBBD2C6B9122878ED2602CAB226069926F60B0F4D5D7787D428ED721E4BA8B980CC469EA5F81B4CA277305AC2A6DFBB7E848B49CF25A319226EF72AE4A4138421D7909246189033982EB3AFDEB59BB54B25CEEF977A493E7E9B2BD22A9D90C4760B272A4A119000"
          , "70448F010B922452C2195247DF3637156C54C21CDC980737E91EA87738F354AB60DB594721E19D5F11A4439F3201039F4701039F48009F49039F37049F420201565F300202209000"
          , "7081FB9381F83934385F7B813D445732E19FCCA0DF15B917B871681A733107A6AB143CE07634750B4570D597531C4296E9202737B4FBE2010CD77164600246C0E9C3CBF45D51BB222F84971F9D453598AA3A9E909CEEC7C423E667C9B515BC8E49FD16E428367D53FBA42407B83A509AB6EA7CCE4A386AAF7CED59B528F3D429CE3EF4BBE8ECFC15F2D885CBABD43E5BD883CACB7ADB65DEA7837316D77F27509B2EB932F2B50BF8F50A951916C3A65096D08AA1F80DC3331B5C072FFBC0BAE5844B8F24408D5EEAA0B43359ABD0ECDC0FEC1E5009F9470C1001F2856352537F771658237FD753C7BBAB528186B65479456CF194511C4061D90D3E4AF7F99000"
          , "7081FC9F4681F8384CE1D88F0F2693692529F90E53FAC7639259ECCB39CD5871527AFD92AA4CE810EBFE646CB3114D01FA6F319B3574DA59EDD75ADB297F263D1AD722D96E52DECDCCA557ACAB456F026D4FF67351334EC33A4BBF34CD240208B2382D7539739C851704918EE465C16486FE7998E8B014949F13B975929E13AB3710452F2F5DF2B99080E01FB58C9799D73F64DA050FF5E36C73F0908F01103D5487D0AACC9A87567E22DC5AD70C5812BA4E724A85C3AB60D0DE515F15CA0B58753EB7F0E44F20BB662B2FF6C4639E403D1320C5234A6EB4EE29FC3F1B15FD14AF02D9DE485A00816B181C8E374A0B52258BA9CD107420EDB63877D5999A5A9000"
          , "70818C8E1000000000000000001E03410302031F009F0D05D86004A8009F0E0500100000009F0F05D86804F8005F25031302075F24033010315A0862144410000101039F080200309F0702FF005F280201568C1B9F02069F03069F1A0295055F2A029A039C019F37049F21039F4E148D1A8A029F02069F03069F1A0295055F2A029A039C019F37049F21039F4A01829000"
          , "9F79060000001000009000"
          , "9F77060000001000009000"
          , "801E8002CCEB1AFA6A1E13206307000103A0A000010A0100001000006DC5E5829000"
          ]

_trade = Trade {
    tradeType=0x00
  , amount = 0
  , date = B.pack [0x15, 0x04, 0x22]
  , time = B.pack [0x11, 0x00, 0x00]
  , magic = 0x18819577
  , tradeMerchant = B.replicate 20 0
  , acType = ARQC
}

_w = 0x11 :: Word8